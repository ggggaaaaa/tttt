name: Code Review with DeepSeek

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  code-review:
    runs-on: ubuntu-latest
    
    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install openai requests

    # Set up DeepSeek API and run code review
    - name: Run Code Review with DeepSeek
      run: |
        python -c "
        from openai import OpenAI

        # Define API key and DeepSeek client
        client = OpenAI(api_key='sk-30d2228c30b840d2a33178ea04fb246f', base_url='https://api.deepseek.com')

        # Request chat completion for code review
        response = client.chat.completions.create(
            model='deepseek-chat',
            messages=[
                {'role': 'system', 'content': 'You are a helpful assistant that reviews code.'},
                {'role': 'user', 'content': 'Please review the following code: \n\n' + open('path_to_code_file.py').read()}
            ],
            stream=False
        )

        # Output the code review
        print(response.choices[0].message.content)
        "

    # Optionally, you can add another step to comment on the PR with the review.
    - name: Comment on PR with Review Feedback
      run: |
        REVIEW_TEXT=$(python -c "
        from openai import OpenAI

        client = OpenAI(api_key='${{ secrets.DEEPS SEEK_API_KEY }}', base_url='https://api.deepseek.com')

        response = client.chat.completions.create(
            model='deepseek-chat',
            messages=[
                {'role': 'system', 'content': 'You are a helpful assistant that reviews code.'},
                {'role': 'user', 'content': 'Please review the following code: \n\n' + open('path_to_code_file.py').read()}
            ],
            stream=False
        )

        print(response.choices[0].message.content)
        ")

        # Use GitHub's API to comment on the pull request
        curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
             -d "{\"body\":\"${REVIEW_TEXT}\"}" \
             "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"

